"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.reactCompilerVersion = exports.createQueryPreloader = exports.skipToken = exports.useReadQuery = exports.useQueryRefHandlers = exports.useLoadableQuery = exports.useSuspenseFragment = exports.useBackgroundQuery = exports.useSuspenseQuery = exports.useFragment = exports.useReactiveVar = exports.useSubscription = exports.useQuery = exports.useMutation = exports.useLazyQuery = exports.useApolloClient = exports.ApolloProvider = exports.getApolloContext = void 0;
var ApolloContext_js_1 = require("./context/ApolloContext.cjs");
Object.defineProperty(exports, "getApolloContext", { enumerable: true, get: function () { return ApolloContext_js_1.getApolloContext; } });
var ApolloProvider_js_1 = require("./context/ApolloProvider.cjs");
Object.defineProperty(exports, "ApolloProvider", { enumerable: true, get: function () { return ApolloProvider_js_1.ApolloProvider; } });
var useApolloClient_js_1 = require("./hooks/useApolloClient.cjs");
Object.defineProperty(exports, "useApolloClient", { enumerable: true, get: function () { return useApolloClient_js_1.useApolloClient; } });
var useLazyQuery_js_1 = require("./hooks/useLazyQuery.cjs");
Object.defineProperty(exports, "useLazyQuery", { enumerable: true, get: function () { return useLazyQuery_js_1.useLazyQuery; } });
var useMutation_js_1 = require("./hooks/useMutation.cjs");
Object.defineProperty(exports, "useMutation", { enumerable: true, get: function () { return useMutation_js_1.useMutation; } });
var useQuery_js_1 = require("./hooks/useQuery.cjs");
Object.defineProperty(exports, "useQuery", { enumerable: true, get: function () { return useQuery_js_1.useQuery; } });
var useSubscription_js_1 = require("./hooks/useSubscription.cjs");
Object.defineProperty(exports, "useSubscription", { enumerable: true, get: function () { return useSubscription_js_1.useSubscription; } });
var useReactiveVar_js_1 = require("./hooks/useReactiveVar.cjs");
Object.defineProperty(exports, "useReactiveVar", { enumerable: true, get: function () { return useReactiveVar_js_1.useReactiveVar; } });
var useFragment_js_1 = require("./hooks/useFragment.cjs");
Object.defineProperty(exports, "useFragment", { enumerable: true, get: function () { return useFragment_js_1.useFragment; } });
var useSuspenseQuery_js_1 = require("./hooks/useSuspenseQuery.cjs");
Object.defineProperty(exports, "useSuspenseQuery", { enumerable: true, get: function () { return useSuspenseQuery_js_1.useSuspenseQuery; } });
var useBackgroundQuery_js_1 = require("./hooks/useBackgroundQuery.cjs");
Object.defineProperty(exports, "useBackgroundQuery", { enumerable: true, get: function () { return useBackgroundQuery_js_1.useBackgroundQuery; } });
var useSuspenseFragment_js_1 = require("./hooks/useSuspenseFragment.cjs");
Object.defineProperty(exports, "useSuspenseFragment", { enumerable: true, get: function () { return useSuspenseFragment_js_1.useSuspenseFragment; } });
var useLoadableQuery_js_1 = require("./hooks/useLoadableQuery.cjs");
Object.defineProperty(exports, "useLoadableQuery", { enumerable: true, get: function () { return useLoadableQuery_js_1.useLoadableQuery; } });
var useQueryRefHandlers_js_1 = require("./hooks/useQueryRefHandlers.cjs");
Object.defineProperty(exports, "useQueryRefHandlers", { enumerable: true, get: function () { return useQueryRefHandlers_js_1.useQueryRefHandlers; } });
var useReadQuery_js_1 = require("./hooks/useReadQuery.cjs");
Object.defineProperty(exports, "useReadQuery", { enumerable: true, get: function () { return useReadQuery_js_1.useReadQuery; } });
var constants_js_1 = require("./hooks/constants.cjs");
Object.defineProperty(exports, "skipToken", { enumerable: true, get: function () { return constants_js_1.skipToken; } });
var createQueryPreloader_js_1 = require("./query-preloader/createQueryPreloader.cjs");
Object.defineProperty(exports, "createQueryPreloader", { enumerable: true, get: function () { return createQueryPreloader_js_1.createQueryPreloader; } });
exports.reactCompilerVersion = "uncompiled";
//# sourceMappingURL=index.cjs.map
