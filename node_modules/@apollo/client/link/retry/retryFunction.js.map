{"version":3,"file":"retryFunction.js","sourceRoot":"","sources":["../../../src/link/retry/retryFunction.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,kBAAkB,CAChC,YAAwC;IAExC,MAAM,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,EAAE,GACxB,YAAY,IAAK,EAAgC,CAAC;IACpD,OAAO,SAAS,aAAa,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK;QACnD,IAAI,KAAK,IAAI,GAAG;YAAE,OAAO,KAAK,CAAC;QAC/B,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACvD,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import type { RetryLink } from \"./retryLink.js\";\n\nexport function buildRetryFunction(\n  retryOptions?: RetryLink.AttemptsOptions\n): RetryLink.AttemptsFunction {\n  const { retryIf, max = 5 } =\n    retryOptions || ({} as RetryLink.AttemptsOptions);\n  return function retryFunction(count, operation, error) {\n    if (count >= max) return false;\n    return retryIf ? retryIf(error, operation) : !!error;\n  };\n}\n"]}