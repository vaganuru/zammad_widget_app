{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/masking/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { TypeOverrides } from \"@apollo/client\";\nimport type { ApplyHKTImplementationWithDefault } from \"@apollo/client/utilities/internal\";\n\nimport type { PreserveTypes } from \"./PreserveTypes.js\";\n\n/**\n * Type used with [fragments](https://apollographql.com/docs/react/data/fragments#using-with-fragments) to ensure parent objects contain the fragment spread from the type.\n */\nexport type FragmentType<TFragmentData> = ApplyHKTImplementationWithDefault<\n  TypeOverrides,\n  \"FragmentType\",\n  PreserveTypes.TypeOverrides,\n  TFragmentData\n>;\n\n/** Unwraps `TData` into its unmasked type. */\nexport type Unmasked<TData> = ApplyHKTImplementationWithDefault<\n  TypeOverrides,\n  \"Unmasked\",\n  PreserveTypes.TypeOverrides,\n  TData\n>;\n\n/**\n * Returns TData as either masked or unmasked depending on whether masking is\n * enabled.\n */\nexport type MaybeMasked<TData> = ApplyHKTImplementationWithDefault<\n  TypeOverrides,\n  \"MaybeMasked\",\n  PreserveTypes.TypeOverrides,\n  TData\n>;\n"]}