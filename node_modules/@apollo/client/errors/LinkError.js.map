{"version":3,"file":"LinkError.js","sources":["../../src/errors/LinkError.ts"],"sourcesContent":["import type { ErrorLike } from \"@apollo/client\";\n\nconst registry = new WeakSet<ErrorLike>();\n\n/** @internal Please do not use directly. */\nexport function registerLinkError(error: ErrorLike) {\n  registry.add(error);\n}\n\n/**\n * A facade error type that keeps a registry of errors emitted from the link\n * chain. `LinkError` is not an error class itself but rather a utility to\n * detect whether an error originated from the link chain.\n *\n * @remarks\n *\n * Use `LinkError` to distinguish between errors from the link chain and custom\n * errors. This is helpful for retrying an operation at the call site only when\n * the error originates from the link chain.\n *\n * @example\n *\n * The following example creates a custom wrapped query function that detects\n * whether the query includes an operation name and throws if not.\n *\n * ```ts\n * import { LinkError } from \"@apollo/client/errors\";\n *\n * async function runQuery<TData>(query: TypedDocumentNode<TData>) {\n *   if (!hasOperationName(query)) {\n *     throw new Error(\"Queries should have operation names.\");\n *   }\n *\n *   return client.watchQuery({ query });\n * }\n *\n * try {\n *   const result = await runQuery(query);\n * } catch (error) {\n *   // Only log the error if the error wasn't our own custom thrown error\n *   if (LinkError.is(error)) {\n *     console.log(\"Got network error:\", error.message);\n *   }\n * }\n * ```\n */\nexport const LinkError = {\n  /**\n   * A method that determines whether an error originated from the link chain.\n   * `is` does not provide any type narrowing.\n   *\n   * @example\n   *\n   * ```ts\n   * if (LinkError.is(error)) {\n   *   // The error originated from the link chain\n   *   console.log(\"Got network error:\", error.message);\n   * }\n   * ```\n   */\n  is: (error: unknown) => registry.has(error as ErrorLike),\n};\n"],"names":[],"mappings":"AAEA,CAAA,CAAA,CAAA,CAAA,EAAM,CAAN,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAiB,CAAjB,CAAA,EAAqB,CAArB,CAAA,CAAA,CAAA,CAAA,CAAA,CAA4B,CAA5B,CAAyC;;;;;;AAGzC,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAgB,CAAhB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAiC,CAAC,CAAlC,CAAA,CAAA,CAAA,CAAkD,EAAlD;IACE,CAAF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAU,CAAC,CAAX,CAAA,CAAc,CAAC,CAAf,CAAA,CAAA,CAAA,CAAoB,CAAC;AACrB;AAEA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAoCA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAO,CAAP,CAAA,CAAA,CAAA,EAAa,CAAb,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAyB;IACvB,CAAF,CAAA;;;;;;;;;;;;KAYA,CAAA;IACE,CAAF,CAAI,EAAE,CAAC,CAAP,CAAA,CAAA,CAAA,CAAqB,EAAE,CAAvB,EAA0B,CAA1B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAkC,CAAC,CAAnC,CAAA,CAAsC,CAAC,CAAvC,CAAA,CAAA,CAAA,CAAyD,CAAC;AAC1D,CAAC;"}